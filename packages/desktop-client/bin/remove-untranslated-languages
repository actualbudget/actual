#!/usr/bin/env node
const fs = require('fs');
const path = require('path');

// Local path to the cloned translations repository
const localRepoPath = './packages/desktop-client/locale';

// Compare JSON files and delete incomplete ones
const processTranslations = () => {
  try {
    const files = fs.readdirSync(localRepoPath);
    const untranslatedJsonPath = path.join(localRepoPath, 'untranslated.json');

    if (!fs.existsSync(untranslatedJsonPath)) {
      throw new Error('untranslated.json not found in the repository.');
    }

    const untranslatedJson = JSON.parse(
      fs.readFileSync(untranslatedJsonPath, 'utf8'),
    );
    const untranslatedKeysCount = Object.keys(untranslatedJson).length;

    console.log(`untranslated.json has ${untranslatedKeysCount} keys.`);

    files.forEach(file => {
      if (file === 'untranslated.json' || path.extname(file) !== '.json')
        return;

      if (file.startsWith('en-')) {
        console.log(`Keeping ${file} as it's an English language.`);
        return;
      }

      const filePath = path.join(localRepoPath, file);
      const jsonData = JSON.parse(fs.readFileSync(filePath, 'utf8'));
      const fileKeysCount = Object.keys(jsonData).length;

      // Calculate the percentage of keys present compared to untranslated.json
      const percentage = (fileKeysCount / untranslatedKeysCount) * 100;
      console.log(
        `${file} has ${fileKeysCount} keys (${percentage.toFixed(2)}%).`,
      );

      if (percentage < 50) {
        fs.unlinkSync(filePath);
        console.log(`Deleted ${file} due to insufficient keys.`);
      } else {
        console.log(`Keeping ${file}.`);
      }
    });

    console.log('Processing completed.');
  } catch (error) {
    console.error(`Error: ${error.message}`);
  }
};

processTranslations();
