{"version":3,"file":"usePreviewTransactions.wSNV9Sg-.chunk.js","sources":["../../../src/hooks/usePreviewTransactions.ts"],"sourcesContent":["import { useState } from 'react';\n\nimport {\n  type ScheduleStatuses,\n  useCachedSchedules,\n} from 'loot-core/client/data-hooks/schedules';\nimport { send } from 'loot-core/platform/client/fetch';\nimport { ungroupTransactions } from 'loot-core/shared/transactions';\nimport { type ScheduleEntity } from 'loot-core/types/models';\n\nimport { type TransactionEntity } from '../../../loot-core/src/types/models/transaction.d';\n\nexport function usePreviewTransactions(\n  collapseTransactions?: (ids: string[]) => void,\n) {\n  const scheduleData = useCachedSchedules();\n  const [previousScheduleData, setPreviousScheduleData] =\n    useState<ReturnType<typeof useCachedSchedules>>(scheduleData);\n  const [previewTransactions, setPreviewTransactions] = useState<\n    TransactionEntity[]\n  >([]);\n\n  if (scheduleData !== previousScheduleData) {\n    setPreviousScheduleData(scheduleData);\n\n    if (scheduleData) {\n      // Kick off an async rules application\n      const schedules =\n        scheduleData.schedules.filter(s =>\n          isForPreview(s, scheduleData.statuses),\n        ) || [];\n\n      const baseTrans = schedules.map(schedule => ({\n        id: 'preview/' + schedule.id,\n        payee: schedule._payee,\n        account: schedule._account,\n        amount: schedule._amount,\n        date: schedule.next_date,\n        schedule: schedule.id,\n      }));\n\n      Promise.all(\n        baseTrans.map(transaction => send('rules-run', { transaction })),\n      ).then(newTrans => {\n        const withDefaults = newTrans.map(t => ({\n          ...t,\n          category: scheduleData.statuses.get(t.schedule),\n          schedule: t.schedule,\n          subtransactions: t.subtransactions?.map((st: TransactionEntity) => ({\n            ...st,\n            id: 'preview/' + st.id,\n            schedule: t.schedule,\n          })),\n        }));\n        setPreviewTransactions(ungroupTransactions(withDefaults));\n        if (collapseTransactions) {\n          collapseTransactions(withDefaults.map(t => t.id));\n        }\n      });\n    }\n\n    return previewTransactions;\n  }\n\n  return previewTransactions;\n}\n\nfunction isForPreview(schedule: ScheduleEntity, statuses: ScheduleStatuses) {\n  const status = statuses.get(schedule.id);\n  return (\n    !schedule.completed &&\n    (status === 'due' || status === 'upcoming' || status === 'missed')\n  );\n}\n"],"names":["usePreviewTransactions","collapseTransactions","scheduleData","useCachedSchedules","previousScheduleData","setPreviousScheduleData","useState","previewTransactions","setPreviewTransactions","baseTrans","schedules","filter","s","isForPreview","statuses","map","schedule","id","payee","_payee","account","_account","amount","_amount","date","next_date","Promise","all","transaction","send","then","newTrans","withDefaults","t","category","get","subtransactions","st","ungroupTransactions","status","completed"],"mappings":"+DAYO,SAASA,EACdC,EAA8C,CAE9C,MAAMC,EAAeC,IACf,CAACC,EAAsBC,CAAwB,EACnDC,WAAgDJ,CAAAA,EAC5C,CAACK,EAAqBC,CAAuB,EAAGF,EAAAA,SAEpD,CAAE,CAAA,EAEJ,GAAIJ,IAAiBE,EAAsB,CAGzC,GAFAC,EAAwBH,CAAAA,EAEpBA,EAAc,CAOhB,MAAMO,GAJJP,EAAaQ,UAAUC,OAAOC,GAC5BC,EAAaD,EAAGV,EAAaY,QAAQ,IAClC,CAAA,GAEqBC,IAAIC,IAAa,CAC3CC,GAAI,WAAaD,EAASC,GAC1BC,MAAOF,EAASG,OAChBC,QAASJ,EAASK,SAClBC,OAAQN,EAASO,QACjBC,KAAMR,EAASS,UACfT,SAAUA,EAASC,EACrB,EAAA,EAEAS,QAAQC,IACNlB,EAAUM,IAAIa,GAAeC,EAAK,YAAa,CAAED,YAAAA,CACjDE,CAAAA,CAAAA,CAAAA,EAAAA,KAAKC,GAAAA,CACL,MAAMC,EAAeD,EAAShB,IAAIkB,IAAM,CACtC,GAAGA,EACHC,SAAUhC,EAAaY,SAASqB,IAAIF,EAAEjB,QAAQ,EAC9CA,SAAUiB,EAAEjB,SACZoB,gBAAiBH,EAAEG,iBAAiBrB,IAAKsB,IAA2B,CAClE,GAAGA,EACHpB,GAAI,WAAaoB,EAAGpB,GACpBD,SAAUiB,EAAEjB,QAAAA,EACd,CACF,EAAA,EACuBsB,EAAAA,EAAoBN,CAAAA,CAAAA,EACvC/B,GACFA,EAAqB+B,EAAajB,IAAIkB,GAAKA,EAAEhB,EAAE,CAAA,CACjD,CACF,CACF,CAEOV,OAAAA,CACT,CAEOA,OAAAA,CACT,CAEA,SAASM,EAAaG,EAA0BF,EAA0B,CACxE,MAAMyB,EAASzB,EAASqB,IAAInB,EAASC,EAAE,EACvC,MACE,CAACD,EAASwB,YACTD,IAAW,OAASA,IAAW,YAAcA,IAAW,SAE7D"}