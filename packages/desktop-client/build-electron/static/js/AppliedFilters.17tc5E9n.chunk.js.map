{"version":3,"file":"AppliedFilters.17tc5E9n.chunk.js","sources":["../../../src/icons/v1/Filter.tsx","../../../src/components/common/MenuButton.tsx","../../../src/components/filters/ConditionsOpMenu.tsx","../../../src/components/filters/CompactFiltersButton.tsx","../../../src/components/filters/FiltersButton.tsx","../../../src/components/filters/OpButton.tsx","../../../src/components/filters/subfieldFromFilter.ts","../../../src/components/filters/subfieldToOptions.ts","../../../src/components/filters/updateFilterReducer.ts","../../../src/components/filters/FiltersMenu.jsx","../../../src/components/filters/FilterExpression.tsx","../../../src/components/filters/AppliedFilters.tsx"],"sourcesContent":["import * as React from 'react';\nimport type { SVGProps } from 'react';\nexport const SvgFilter = (props: SVGProps<SVGSVGElement>) => (\n  <svg\n    {...props}\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    style={{\n      color: 'inherit',\n      ...props.style,\n    }}\n  >\n    <path d=\"m12 12 8-8V0H0v4l8 8v8l4-4v-4z\" fill=\"currentColor\" />\n  </svg>\n);\n","import React, { type ComponentPropsWithoutRef, forwardRef } from 'react';\n\nimport { SvgDotsHorizontalTriple } from '../../icons/v1';\n\nimport { Button } from './Button2';\n\ntype MenuButtonProps = ComponentPropsWithoutRef<typeof Button>;\n\nexport const MenuButton = forwardRef<HTMLButtonElement, MenuButtonProps>(\n  (props, ref) => {\n    return (\n      <Button ref={ref} variant=\"bare\" aria-label=\"Menu\" {...props}>\n        <SvgDotsHorizontalTriple\n          width={15}\n          height={15}\n          style={{ transform: 'rotateZ(90deg)' }}\n        />\n      </Button>\n    );\n  },\n);\n\nMenuButton.displayName = 'MenuButton';\n","import React from 'react';\n\nimport { type RuleConditionEntity } from 'loot-core/types/models';\n\nimport { theme } from '../../style';\nimport { Text } from '../common/Text';\nimport { View } from '../common/View';\nimport { FieldSelect } from '../modals/EditRuleModal';\n\nexport function ConditionsOpMenu({\n  conditionsOp,\n  onChange,\n  conditions,\n}: {\n  conditionsOp: string;\n  onChange: (value: 'and' | 'or') => void;\n  conditions: RuleConditionEntity[];\n}) {\n  return conditions.length > 1 ? (\n    <Text style={{ color: theme.pageText, marginTop: 11, marginRight: 5 }}>\n      <FieldSelect\n        style={{ display: 'inline-flex' }}\n        fields={[\n          ['and', 'all'],\n          ['or', 'any'],\n        ]}\n        value={conditionsOp}\n        onChange={onChange}\n      />\n      of:\n    </Text>\n  ) : (\n    <View />\n  );\n}\n","import React from 'react';\n\nimport { SvgFilter } from '../../icons/v1';\nimport { Button } from '../common/Button2';\n\nexport function CompactFiltersButton({ onPress }: { onPress: () => void }) {\n  return (\n    <Button variant=\"bare\" onPress={onPress} style={{ minWidth: 20 }}>\n      <SvgFilter\n        width={15}\n        height={15}\n        style={{ width: 15, height: 15, flexShrink: 0 }}\n      />\n    </Button>\n  );\n}\n","import React from 'react';\n\nimport { SvgFilter } from '../../icons/v1/Filter';\nimport { Button } from '../common/Button2';\n\nexport function FiltersButton({ onPress }: { onPress: () => void }) {\n  return (\n    <Button variant=\"bare\" onPress={onPress}>\n      <SvgFilter\n        style={{ width: 12, height: 12, marginRight: 5, flexShrink: 0 }}\n      />{' '}\n      Filter\n    </Button>\n  );\n}\n","import React, { type CSSProperties } from 'react';\n\nimport { css } from '@emotion/css';\n\nimport { friendlyOp } from 'loot-core/src/shared/rules';\n\nimport { theme } from '../../style';\nimport { Button } from '../common/Button2';\n\ntype OpButtonProps = {\n  op: string;\n  isSelected: boolean;\n  onPress: () => void;\n  style?: CSSProperties;\n};\n\nexport function OpButton({ op, isSelected, style, onPress }: OpButtonProps) {\n  return (\n    <Button\n      variant=\"bare\"\n      style={style}\n      className={css({\n        backgroundColor: theme.pillBackground,\n        marginBottom: 5,\n        ...(isSelected && {\n          color: theme.buttonNormalSelectedText,\n          '&,:hover,:active': {\n            backgroundColor: theme.buttonNormalSelectedBackground,\n            color: theme.buttonNormalSelectedText,\n          },\n        }),\n      })}\n      onPress={onPress}\n    >\n      {friendlyOp(op)}\n    </Button>\n  );\n}\n","import { type RuleConditionEntity } from 'loot-core/src/types/models';\n\nexport function subfieldFromFilter({\n  field,\n  options,\n  value,\n}: Pick<RuleConditionEntity, 'field' | 'options' | 'value'>) {\n  if (field === 'date') {\n    if (typeof value === 'string') {\n      if (value.length === 7) {\n        return 'month';\n      } else if (value.length === 4) {\n        return 'year';\n      }\n    }\n  }\n\n  if (field === 'amount') {\n    if (options && options.inflow) {\n      return 'amount-inflow';\n    } else if (options && options.outflow) {\n      return 'amount-outflow';\n    }\n  }\n\n  return field;\n}\n","import { type RuleConditionEntity } from 'loot-core/src/types/models';\n\nexport function subfieldToOptions(field: string, subfield: string) {\n  let setOptions: RuleConditionEntity['options'];\n  switch (field) {\n    case 'amount':\n      switch (subfield) {\n        case 'amount-inflow':\n          setOptions = { inflow: true };\n          break;\n        case 'amount-outflow':\n          setOptions = { outflow: true };\n          break;\n        default:\n          break;\n      }\n      break;\n    case 'date':\n      switch (subfield) {\n        case 'month':\n          setOptions = { month: true };\n          break;\n        case 'year':\n          setOptions = { year: true };\n          break;\n        default:\n          break;\n      }\n      break;\n    default:\n      break;\n  }\n  return setOptions;\n}\n","import { makeValue, FIELD_TYPES } from 'loot-core/src/shared/rules';\nimport { type RuleConditionEntity } from 'loot-core/src/types/models';\n\nexport function updateFilterReducer(\n  state: Pick<RuleConditionEntity, 'op' | 'field' | 'value'>,\n  action: { type: 'set-op' | 'set-value' } & Pick<\n    RuleConditionEntity,\n    'op' | 'value'\n  >,\n) {\n  switch (action.type) {\n    case 'set-op': {\n      const type = FIELD_TYPES.get(state.field);\n      let value: RuleConditionEntity['value'] | null = state.value;\n      if (\n        (type === 'id' || type === 'string') &&\n        (action.op === 'contains' ||\n          action.op === 'matches' ||\n          action.op === 'is' ||\n          action.op === 'doesNotContain' ||\n          action.op === 'isNot' ||\n          action.op === 'hasTags')\n      ) {\n        // Clear out the value if switching between contains or\n        // is/oneof for the id or string type\n        value = null;\n      }\n      return { ...state, op: action.op, value };\n    }\n    case 'set-value': {\n      const { value } = makeValue(action.value, {\n        type: FIELD_TYPES.get(state.field),\n      });\n      return { ...state, value };\n    }\n    default:\n      throw new Error(`Unhandled action type: ${action.type}`);\n  }\n}\n","import React, { useState, useRef, useEffect, useReducer } from 'react';\r\nimport { FocusScope } from 'react-aria';\r\nimport { Form } from 'react-aria-components';\r\nimport { useHotkeys } from 'react-hotkeys-hook';\r\nimport { Trans, useTranslation } from 'react-i18next';\r\n\r\nimport {\r\n  parse as parseDate,\r\n  format as formatDate,\r\n  isValid as isDateValid,\r\n} from 'date-fns';\r\n\r\nimport { useFilters } from 'loot-core/src/client/data-hooks/filters';\r\nimport { send } from 'loot-core/src/platform/client/fetch';\r\nimport { getMonthYearFormat } from 'loot-core/src/shared/months';\r\nimport {\r\n  mapField,\r\n  deserializeField,\r\n  getFieldError,\r\n  unparse,\r\n  FIELD_TYPES,\r\n  getValidOps,\r\n} from 'loot-core/src/shared/rules';\r\nimport { titleFirst } from 'loot-core/src/shared/util';\r\n\r\nimport { useDateFormat } from '../../hooks/useDateFormat';\r\nimport { styles, theme } from '../../style';\r\nimport { Button } from '../common/Button2';\r\nimport { Menu } from '../common/Menu';\r\nimport { Popover } from '../common/Popover';\r\nimport { Select } from '../common/Select';\r\nimport { Stack } from '../common/Stack';\r\nimport { Text } from '../common/Text';\r\nimport { Tooltip } from '../common/Tooltip';\r\nimport { View } from '../common/View';\r\nimport { GenericInput } from '../util/GenericInput';\r\n\r\nimport { CompactFiltersButton } from './CompactFiltersButton';\r\nimport { FiltersButton } from './FiltersButton';\r\nimport { OpButton } from './OpButton';\r\nimport { subfieldFromFilter } from './subfieldFromFilter';\r\nimport { subfieldToOptions } from './subfieldToOptions';\r\nimport { updateFilterReducer } from './updateFilterReducer';\r\n\r\nlet isDatepickerClick = false;\r\n\r\nconst filterFields = [\r\n  'date',\r\n  'account',\r\n  'payee',\r\n  'notes',\r\n  'category',\r\n  'amount',\r\n  'cleared',\r\n  'reconciled',\r\n  'saved',\r\n].map(field => [field, mapField(field)]);\r\n\r\nfunction ConfigureField({\r\n  field,\r\n  initialSubfield = field,\r\n  op,\r\n  value,\r\n  dispatch,\r\n  onApply,\r\n}) {\r\n  const { t } = useTranslation();\r\n  const [subfield, setSubfield] = useState(initialSubfield);\r\n  const inputRef = useRef();\r\n  const prevOp = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (prevOp.current !== op && inputRef.current) {\r\n      inputRef.current.focus();\r\n    }\r\n    prevOp.current = op;\r\n  }, [op]);\r\n\r\n  const type = FIELD_TYPES.get(field);\r\n  let ops = getValidOps(field).filter(op => op !== 'isbetween');\r\n\r\n  // Month and year fields are quite hacky right now! Figure out how\r\n  // to clean this up later\r\n  if (subfield === 'month' || subfield === 'year') {\r\n    ops = ['is'];\r\n  }\r\n\r\n  return (\r\n    <FocusScope>\r\n      <View style={{ marginBottom: 10 }}>\r\n        <Stack direction=\"row\" align=\"flex-start\">\r\n          {field === 'amount' || field === 'date' ? (\r\n            <Select\r\n              options={\r\n                field === 'amount'\r\n                  ? [\r\n                      ['amount', t('Amount')],\r\n                      ['amount-inflow', t('Amount (inflow)')],\r\n                      ['amount-outflow', t('Amount (outflow)')],\r\n                    ]\r\n                  : field === 'date'\r\n                    ? [\r\n                        ['date', t('Date')],\r\n                        ['month', t('Month')],\r\n                        ['year', t('Year')],\r\n                      ]\r\n                    : null\r\n              }\r\n              value={subfield}\r\n              onChange={sub => {\r\n                setSubfield(sub);\r\n\r\n                if (sub === 'month' || sub === 'year') {\r\n                  dispatch({ type: 'set-op', op: 'is' });\r\n                }\r\n              }}\r\n            />\r\n          ) : (\r\n            titleFirst(mapField(field))\r\n          )}\r\n          <View style={{ flex: 1 }} />\r\n        </Stack>\r\n      </View>\r\n\r\n      <View\r\n        style={{\r\n          color: theme.pageTextLight,\r\n          marginBottom: 10,\r\n        }}\r\n      >\r\n        {field === 'saved' && t('Existing filters will be cleared')}\r\n      </View>\r\n\r\n      <Stack\r\n        direction=\"row\"\r\n        align=\"flex-start\"\r\n        spacing={1}\r\n        style={{ flexWrap: 'wrap' }}\r\n      >\r\n        {type === 'boolean' ? (\r\n          <>\r\n            <OpButton\r\n              key=\"true\"\r\n              op=\"true\"\r\n              isSelected={value === true}\r\n              onPress={() => {\r\n                dispatch({ type: 'set-op', op: 'is' });\r\n                dispatch({ type: 'set-value', value: true });\r\n              }}\r\n            />\r\n            <OpButton\r\n              key=\"false\"\r\n              op=\"false\"\r\n              isSelected={value === false}\r\n              onPress={() => {\r\n                dispatch({ type: 'set-op', op: 'is' });\r\n                dispatch({ type: 'set-value', value: false });\r\n              }}\r\n            />\r\n          </>\r\n        ) : (\r\n          <>\r\n            <Stack\r\n              direction=\"row\"\r\n              align=\"flex-start\"\r\n              spacing={1}\r\n              style={{ flexWrap: 'wrap' }}\r\n            >\r\n              {ops.slice(0, 3).map(currOp => (\r\n                <OpButton\r\n                  key={currOp}\r\n                  op={currOp}\r\n                  isSelected={currOp === op}\r\n                  onPress={() => dispatch({ type: 'set-op', op: currOp })}\r\n                />\r\n              ))}\r\n            </Stack>\r\n            <Stack\r\n              direction=\"row\"\r\n              align=\"flex-start\"\r\n              spacing={1}\r\n              style={{ flexWrap: 'wrap' }}\r\n            >\r\n              {ops.slice(3, ops.length).map(currOp => (\r\n                <OpButton\r\n                  key={currOp}\r\n                  op={currOp}\r\n                  isSelected={currOp === op}\r\n                  onPress={() => dispatch({ type: 'set-op', op: currOp })}\r\n                />\r\n              ))}\r\n            </Stack>\r\n          </>\r\n        )}\r\n      </Stack>\r\n\r\n      <Form\r\n        onSubmit={e => {\r\n          e.preventDefault();\r\n          onApply({\r\n            field,\r\n            op,\r\n            value,\r\n            options: subfieldToOptions(field, subfield),\r\n          });\r\n        }}\r\n      >\r\n        {type !== 'boolean' && (\r\n          <GenericInput\r\n            inputRef={inputRef}\r\n            field={field}\r\n            subfield={subfield}\r\n            type={\r\n              type === 'id' &&\r\n              (op === 'contains' ||\r\n                op === 'matches' ||\r\n                op === 'doesNotContain' ||\r\n                op === 'hasTags')\r\n                ? 'string'\r\n                : type\r\n            }\r\n            value={value}\r\n            multi={op === 'oneOf' || op === 'notOneOf'}\r\n            style={{ marginTop: 10 }}\r\n            onChange={v => {\r\n              dispatch({ type: 'set-value', value: v });\r\n            }}\r\n          />\r\n        )}\r\n\r\n        <Stack\r\n          direction=\"row\"\r\n          justify=\"flex-end\"\r\n          align=\"center\"\r\n          style={{ marginTop: 15 }}\r\n        >\r\n          <View style={{ flex: 1 }} />\r\n          <Button variant=\"primary\" type=\"submit\">\r\n            <Trans>Apply</Trans>\r\n          </Button>\r\n        </Stack>\r\n      </Form>\r\n    </FocusScope>\r\n  );\r\n}\r\n\r\nexport function FilterButton({ onApply, compact, hover, exclude }) {\r\n  const { t } = useTranslation();\r\n  const filters = useFilters();\r\n  const triggerRef = useRef(null);\r\n\r\n  const dateFormat = useDateFormat() || 'MM/dd/yyyy';\r\n\r\n  const [state, dispatch] = useReducer(\r\n    (state, action) => {\r\n      switch (action.type) {\r\n        case 'select-field':\r\n          return { ...state, fieldsOpen: true, condOpen: false };\r\n        case 'configure': {\r\n          const { field } = deserializeField(action.field);\r\n          const type = FIELD_TYPES.get(field);\r\n          const ops = getValidOps(field);\r\n          return {\r\n            ...state,\r\n            fieldsOpen: false,\r\n            condOpen: true,\r\n            field: action.field,\r\n            op: ops[0],\r\n            value: type === 'boolean' ? true : null,\r\n          };\r\n        }\r\n        case 'close':\r\n          return { fieldsOpen: false, condOpen: false, value: null };\r\n        default:\r\n          return updateFilterReducer(state, action);\r\n      }\r\n    },\r\n    { fieldsOpen: false, condOpen: false, field: null, value: null },\r\n  );\r\n\r\n  async function onValidateAndApply(cond) {\r\n    cond = unparse({ ...cond, type: FIELD_TYPES.get(cond.field) });\r\n\r\n    if (cond.type === 'date' && cond.options) {\r\n      if (cond.options.month) {\r\n        const date = parseDate(\r\n          cond.value,\r\n          getMonthYearFormat(dateFormat),\r\n          new Date(),\r\n        );\r\n        if (isDateValid(date)) {\r\n          cond.value = formatDate(date, 'yyyy-MM');\r\n        } else {\r\n          alert(t('Invalid date format'));\r\n          return;\r\n        }\r\n      } else if (cond.options.year) {\r\n        const date = parseDate(cond.value, 'yyyy', new Date());\r\n        if (isDateValid(date)) {\r\n          cond.value = formatDate(date, 'yyyy');\r\n        } else {\r\n          alert(t('Invalid date format'));\r\n          return;\r\n        }\r\n      }\r\n    }\r\n\r\n    const { error } =\r\n      cond.field !== 'saved' &&\r\n      (await send('rule-validate', {\r\n        conditions: [cond],\r\n        actions: [],\r\n      }));\r\n\r\n    const saved = filters.find(f => cond.value === f.id);\r\n\r\n    if (error && error.conditionErrors.length > 0) {\r\n      const field = titleFirst(mapField(cond.field));\r\n      alert(field + ': ' + getFieldError(error.conditionErrors[0]));\r\n    } else {\r\n      onApply(saved ? saved : cond);\r\n      dispatch({ type: 'close' });\r\n    }\r\n  }\r\n  useHotkeys('f', () => dispatch({ type: 'select-field' }), {\r\n    scopes: ['app'],\r\n  });\r\n\r\n  return (\r\n    <View>\r\n      <View ref={triggerRef}>\r\n        <Tooltip\r\n          style={{\r\n            ...styles.tooltip,\r\n            lineHeight: 1.5,\r\n            padding: '6px 10px',\r\n          }}\r\n          content={\r\n            <Text>\r\n              <Trans>Filters</Trans>\r\n            </Text>\r\n          }\r\n          placement=\"bottom start\"\r\n          triggerProps={{\r\n            isDisabled: !hover,\r\n          }}\r\n        >\r\n          {compact ? (\r\n            <CompactFiltersButton\r\n              onPress={() => dispatch({ type: 'select-field' })}\r\n            />\r\n          ) : (\r\n            <FiltersButton onPress={() => dispatch({ type: 'select-field' })} />\r\n          )}\r\n        </Tooltip>\r\n      </View>\r\n\r\n      <Popover\r\n        triggerRef={triggerRef}\r\n        placement=\"bottom start\"\r\n        isOpen={state.fieldsOpen}\r\n        onOpenChange={() => dispatch({ type: 'close' })}\r\n        data-testid=\"filters-select-tooltip\"\r\n      >\r\n        <Menu\r\n          onMenuSelect={name => {\r\n            dispatch({ type: 'configure', field: name });\r\n          }}\r\n          items={filterFields\r\n            .filter(f => (exclude ? !exclude.includes(f[0]) : true))\r\n            .sort()\r\n            .map(([name, text]) => ({\r\n              name,\r\n              text: titleFirst(text),\r\n            }))}\r\n        />\r\n      </Popover>\r\n\r\n      <Popover\r\n        triggerRef={triggerRef}\r\n        placement=\"bottom start\"\r\n        isOpen={state.condOpen}\r\n        onOpenChange={() => {\r\n          dispatch({ type: 'close' });\r\n        }}\r\n        shouldCloseOnInteractOutside={element => {\r\n          // Datepicker selections for some reason register 2x clicks\r\n          // We want to keep the popover open after selecting a date.\r\n          // So we ignore the \"close\" event on selection + the subsequent event.\r\n          if (element.dataset.pikaYear) {\r\n            isDatepickerClick = true;\r\n            return false;\r\n          }\r\n          if (isDatepickerClick) {\r\n            isDatepickerClick = false;\r\n            return false;\r\n          }\r\n\r\n          return true;\r\n        }}\r\n        style={{ width: 275, padding: 15, color: theme.menuItemText }}\r\n        data-testid=\"filters-menu-tooltip\"\r\n      >\r\n        {state.field && (\r\n          <ConfigureField\r\n            field={state.field}\r\n            op={state.op}\r\n            value={state.value}\r\n            dispatch={dispatch}\r\n            onApply={onValidateAndApply}\r\n          />\r\n        )}\r\n      </Popover>\r\n    </View>\r\n  );\r\n}\r\n\r\nexport function FilterEditor({ field, op, value, options, onSave, onClose }) {\r\n  const [state, dispatch] = useReducer(\r\n    (state, action) => {\r\n      switch (action.type) {\r\n        case 'close':\r\n          onClose();\r\n          return state;\r\n        default:\r\n          return updateFilterReducer(state, action);\r\n      }\r\n    },\r\n    { field, op, value, options },\r\n  );\r\n\r\n  return (\r\n    <ConfigureField\r\n      field={state.field}\r\n      initialSubfield={subfieldFromFilter({ field, options, value })}\r\n      op={state.op}\r\n      value={state.value}\r\n      options={state.options}\r\n      dispatch={dispatch}\r\n      onApply={cond => {\r\n        cond = unparse({ ...cond, type: FIELD_TYPES.get(cond.field) });\r\n        onSave(cond);\r\n        onClose();\r\n      }}\r\n    />\r\n  );\r\n}\r\n","import React, { useRef, useState, type CSSProperties } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport { mapField, friendlyOp } from 'loot-core/src/shared/rules';\nimport { integerToCurrency } from 'loot-core/src/shared/util';\nimport { type RuleConditionEntity } from 'loot-core/src/types/models';\n\nimport { SvgDelete } from '../../icons/v0';\nimport { theme } from '../../style';\nimport { Button } from '../common/Button2';\nimport { Popover } from '../common/Popover';\nimport { Text } from '../common/Text';\nimport { View } from '../common/View';\nimport { Value } from '../rules/Value';\n\nimport { FilterEditor } from './FiltersMenu';\nimport { subfieldFromFilter } from './subfieldFromFilter';\n\nlet isDatepickerClick = false;\n\ntype FilterExpressionProps<T extends RuleConditionEntity> = {\n  field: T['field'];\n  customName: T['customName'];\n  op: T['op'];\n  value: T['value'];\n  options: T['options'];\n  style?: CSSProperties;\n  onChange: (cond: T) => void;\n  onDelete: () => void;\n};\n\nexport function FilterExpression<T extends RuleConditionEntity>({\n  field: originalField,\n  customName,\n  op,\n  value,\n  options,\n  style,\n  onChange,\n  onDelete,\n}: FilterExpressionProps<T>) {\n  const { t } = useTranslation();\n  const [editing, setEditing] = useState(false);\n  const triggerRef = useRef(null);\n\n  const field = subfieldFromFilter({ field: originalField, value });\n\n  return (\n    <View\n      style={{\n        backgroundColor: theme.pillBackground,\n        borderRadius: 4,\n        flexDirection: 'row',\n        alignItems: 'center',\n        marginRight: 10,\n        marginTop: 10,\n        ...style,\n      }}\n    >\n      <Button\n        ref={triggerRef}\n        variant=\"bare\"\n        isDisabled={customName != null}\n        onPress={() => setEditing(true)}\n        style={{\n          maxWidth: 'calc(100% - 26px)',\n          whiteSpace: 'nowrap',\n          display: 'block',\n        }}\n      >\n        <div\n          style={{\n            paddingBlock: 1,\n            paddingLeft: 5,\n            paddingRight: 2,\n            overflow: 'hidden',\n            textOverflow: 'ellipsis',\n          }}\n        >\n          {customName ? (\n            <Text style={{ color: theme.pageTextPositive }}>{customName}</Text>\n          ) : (\n            <>\n              <Text style={{ color: theme.pageTextPositive }}>\n                {mapField(field, options)}\n              </Text>{' '}\n              <Text>{friendlyOp(op, null)}</Text>{' '}\n              <Value\n                value={value}\n                field={field}\n                inline={true}\n                valueIsRaw={\n                  op === 'contains' ||\n                  op === 'matches' ||\n                  op === 'doesNotContain' ||\n                  op === 'hasTags'\n                }\n              />\n            </>\n          )}\n        </div>\n      </Button>\n      <Button variant=\"bare\" onPress={onDelete} aria-label={t('Delete filter')}>\n        <SvgDelete\n          style={{\n            width: 8,\n            height: 8,\n            margin: 4,\n          }}\n        />\n      </Button>\n\n      <Popover\n        triggerRef={triggerRef}\n        placement=\"bottom start\"\n        isOpen={editing}\n        onOpenChange={() => setEditing(false)}\n        shouldCloseOnInteractOutside={element => {\n          // Datepicker selections for some reason register 2x clicks\n          // We want to keep the popover open after selecting a date.\n          // So we ignore the \"close\" event on selection + the subsequent event.\n          if (element instanceof HTMLElement && element.dataset.pikaYear) {\n            isDatepickerClick = true;\n            return false;\n          }\n          if (isDatepickerClick) {\n            isDatepickerClick = false;\n            return false;\n          }\n\n          return true;\n        }}\n        style={{ width: 275, padding: 15, color: theme.menuItemText }}\n        data-testid=\"filters-menu-tooltip\"\n      >\n        <FilterEditor\n          field={originalField}\n          op={op}\n          value={\n            field === 'amount' && typeof value === 'number'\n              ? integerToCurrency(value)\n              : value\n          }\n          options={options}\n          onSave={onChange}\n          onClose={() => setEditing(false)}\n        />\n      </Popover>\n    </View>\n  );\n}\n","import React from 'react';\n\nimport { type RuleConditionEntity } from 'loot-core/src/types/models';\n\nimport { View } from '../common/View';\n\nimport { ConditionsOpMenu } from './ConditionsOpMenu';\nimport { FilterExpression } from './FilterExpression';\n\ntype AppliedFiltersProps = {\n  conditions: RuleConditionEntity[];\n  onUpdate: (\n    filter: RuleConditionEntity,\n    newFilter: RuleConditionEntity,\n  ) => void;\n  onDelete: (filter: RuleConditionEntity) => void;\n  conditionsOp: string;\n  onConditionsOpChange: (value: 'and' | 'or') => void;\n};\n\nexport function AppliedFilters({\n  conditions,\n  onUpdate,\n  onDelete,\n  conditionsOp,\n  onConditionsOpChange,\n}: AppliedFiltersProps) {\n  return (\n    <View\n      style={{\n        flexDirection: 'row',\n        alignItems: 'flex-start',\n        flexWrap: 'wrap',\n      }}\n    >\n      <ConditionsOpMenu\n        conditionsOp={conditionsOp}\n        onChange={onConditionsOpChange}\n        conditions={conditions}\n      />\n      {conditions.map((filter: RuleConditionEntity, i: number) => (\n        <FilterExpression\n          key={i}\n          customName={filter.customName}\n          field={filter.field}\n          op={filter.op}\n          value={filter.value}\n          options={filter.options}\n          onChange={newFilter => onUpdate(filter, newFilter)}\n          onDelete={() => onDelete(filter)}\n        />\n      ))}\n    </View>\n  );\n}\n"],"names":["SvgFilter","props","_jsx","svg","xmlns","viewBox","style","color","path","d","fill","MenuButton","forwardRef","ref","Button","variant","aria-label","SvgDotsHorizontalTriple","width","height","transform","displayName","ConditionsOpMenu","conditionsOp","onChange","conditions","length","_jsxs","Text","theme","pageText","marginTop","marginRight","FieldSelect","display","fields","value","View","CompactFiltersButton","onPress","minWidth","flexShrink","FiltersButton","OpButton","op","isSelected","className","css","backgroundColor","pillBackground","marginBottom","buttonNormalSelectedText","buttonNormalSelectedBackground","friendlyOp","subfieldFromFilter","field","options","inflow","outflow","subfieldToOptions","subfield","setOptions","month","year","updateFilterReducer","state","action","type","FIELD_TYPES","get","makeValue","Error","isDatepickerClick","filterFields","map","mapField","ConfigureField","initialSubfield","dispatch","onApply","t","useTranslation","setSubfield","useState","inputRef","useRef","prevOp","useEffect","current","focus","ops","getValidOps","filter","FocusScope","Stack","direction","align","Select","sub","titleFirst","flex","pageTextLight","spacing","flexWrap","_Fragment","slice","currOp","Form","onSubmit","e","preventDefault","GenericInput","multi","v","justify","Trans","FilterButton","compact","hover","exclude","filters","useFilters","triggerRef","dateFormat","useDateFormat","useReducer","fieldsOpen","condOpen","deserializeField","onValidateAndApply","cond","unparse","date","parseDate","getMonthYearFormat","Date","isDateValid","formatDate","error","send","actions","saved","find","f","id","conditionErrors","alert","getFieldError","useHotkeys","scopes","Tooltip","styles","tooltip","lineHeight","padding","content","placement","triggerProps","isDisabled","Popover","isOpen","onOpenChange","data-testid","Menu","onMenuSelect","name","items","includes","sort","text","shouldCloseOnInteractOutside","element","dataset","pikaYear","menuItemText","FilterEditor","onSave","onClose","FilterExpression","originalField","customName","onDelete","editing","setEditing","borderRadius","flexDirection","alignItems","maxWidth","whiteSpace","div","paddingBlock","paddingLeft","paddingRight","overflow","textOverflow","pageTextPositive","Value","inline","valueIsRaw","SvgDelete","margin","HTMLElement","integerToCurrency","AppliedFilters","onUpdate","onConditionsOpChange","i","newFilter"],"mappings":"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"}