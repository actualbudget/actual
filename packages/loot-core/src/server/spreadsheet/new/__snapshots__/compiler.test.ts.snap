// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Compiler basic 1`] = `
Array [
  Array [
    Symbol(query),
    "
      SELECT sum(amount) FROM transactions
      LEFT JOIN category_mapping __cm ON __cm.id = transactions.category
      LEFT JOIN accounts t1 ON t1.id = transactions.acct
LEFT JOIN banks t2 ON t2.id = t1.bank
       WHERE ((((date >= 20170101) and (date <= 20170131)) and (t2.name = 1))) AND transactions.isParent = 0 AND transactions.tombstone = 0
     ",
    true,
  ],
  Array [
    Symbol(mov),
    Object {
      "index": 1,
      "type": "__reg",
    },
    Object {
      "index": 0,
      "type": "__stack",
    },
  ],
  Array [
    Symbol(call),
    Object {
      "name": "generated!number",
      "type": "__var",
    },
    Array [
      Object {
        "index": 0,
        "type": "__stack",
      },
    ],
  ],
  Array [
    Symbol(mov),
    Object {
      "index": 1,
      "type": "__reg",
    },
    Object {
      "index": 0,
      "type": "__stack",
    },
  ],
  Array [
    Symbol(call),
    Object {
      "name": "generated!first",
      "type": "__var",
    },
    Array [
      Object {
        "index": 0,
        "type": "__stack",
      },
    ],
  ],
  Array [
    Symbol(mov),
    Object {
      "index": 1,
      "type": "__reg",
    },
    Object {
      "name": "generated!result",
      "type": "__var",
    },
  ],
]
`;

exports[`Compiler basic 2`] = `
Array [
  Array [
    Symbol(mov),
    "",
    Object {
      "name": "generated!result",
      "type": "__var",
    },
  ],
]
`;

exports[`Compiler compiler binary ops 1`] = `
Array [
  Array [
    Symbol(mov),
    Object {
      "name": "generated!bar",
      "type": "__var",
    },
    Object {
      "index": 1,
      "type": "__reg",
    },
  ],
  Array [
    Symbol(bop),
    "+",
    Object {
      "name": "generated!foo",
      "type": "__var",
    },
    Object {
      "index": 1,
      "type": "__reg",
    },
  ],
  Array [
    Symbol(mov),
    Object {
      "index": 1,
      "type": "__reg",
    },
    Object {
      "index": 0,
      "type": "__stack",
    },
  ],
  Array [
    Symbol(mov),
    Object {
      "name": "generated!baz",
      "type": "__var",
    },
    Object {
      "index": 1,
      "type": "__reg",
    },
  ],
  Array [
    Symbol(bop),
    "+",
    Object {
      "index": 0,
      "type": "__stack",
    },
    Object {
      "index": 1,
      "type": "__reg",
    },
  ],
  Array [
    Symbol(mov),
    Object {
      "index": 1,
      "type": "__reg",
    },
    Object {
      "index": 0,
      "type": "__stack",
    },
  ],
  Array [
    Symbol(mov),
    Object {
      "name": "generated!boo",
      "type": "__var",
    },
    Object {
      "index": 1,
      "type": "__reg",
    },
  ],
  Array [
    Symbol(bop),
    "+",
    Object {
      "index": 0,
      "type": "__stack",
    },
    Object {
      "index": 1,
      "type": "__reg",
    },
  ],
  Array [
    Symbol(mov),
    Object {
      "index": 1,
      "type": "__reg",
    },
    Object {
      "name": "generated!result",
      "type": "__var",
    },
  ],
]
`;

exports[`Compiler compiler nested funcs 1`] = `
Array [
  Array [
    Symbol(mov),
    0,
    Object {
      "index": 1,
      "type": "__reg",
    },
  ],
  Array [
    Symbol(mov),
    Object {
      "index": 1,
      "type": "__reg",
    },
    Object {
      "index": 0,
      "type": "__stack",
    },
  ],
  Array [
    Symbol(mov),
    -20000,
    Object {
      "index": 1,
      "type": "__reg",
    },
  ],
  Array [
    Symbol(mov),
    Object {
      "index": 1,
      "type": "__reg",
    },
    Object {
      "index": 1,
      "type": "__stack",
    },
  ],
  Array [
    Symbol(call),
    Object {
      "name": "generated!number",
      "type": "__var",
    },
    Array [
      Object {
        "index": 1,
        "type": "__stack",
      },
    ],
  ],
  Array [
    Symbol(mov),
    Object {
      "index": 1,
      "type": "__reg",
    },
    Object {
      "index": 1,
      "type": "__stack",
    },
  ],
  Array [
    Symbol(call),
    Object {
      "name": "generated!min",
      "type": "__var",
    },
    Array [
      Object {
        "index": 0,
        "type": "__stack",
      },
      Object {
        "index": 1,
        "type": "__stack",
      },
    ],
  ],
  Array [
    Symbol(mov),
    Object {
      "index": 1,
      "type": "__reg",
    },
    Object {
      "name": "generated!result",
      "type": "__var",
    },
  ],
]
`;

exports[`Compiler compiles boolean types 1`] = `
Array [
  Array [
    Symbol(mov),
    true,
    Object {
      "index": 1,
      "type": "__reg",
    },
  ],
  Array [
    Symbol(mov),
    Object {
      "index": 1,
      "type": "__reg",
    },
    Object {
      "index": 0,
      "type": "__stack",
    },
  ],
  Array [
    Symbol(mov),
    1,
    Object {
      "index": 1,
      "type": "__reg",
    },
  ],
  Array [
    Symbol(bop),
    "and",
    Object {
      "index": 0,
      "type": "__stack",
    },
    Object {
      "index": 1,
      "type": "__reg",
    },
  ],
  Array [
    Symbol(mov),
    Object {
      "index": 1,
      "type": "__reg",
    },
    Object {
      "index": 0,
      "type": "__stack",
    },
  ],
  Array [
    Symbol(jumpf),
    Object {
      "index": 0,
      "type": "__stack",
    },
    Object {
      "get": [Function],
      "resolve": [Function],
    },
  ],
  Array [
    Symbol(mov),
    0,
    Object {
      "index": 1,
      "type": "__reg",
    },
  ],
  Array [
    Symbol(jumpt),
    Object {
      "index": 0,
      "type": "__stack",
    },
    Object {
      "get": [Function],
      "resolve": [Function],
    },
  ],
  Array [
    Symbol(mov),
    1,
    Object {
      "index": 1,
      "type": "__reg",
    },
  ],
  Array [
    Symbol(mov),
    Object {
      "index": 1,
      "type": "__reg",
    },
    Object {
      "name": "generated!result",
      "type": "__var",
    },
  ],
]
`;

exports[`Compiler complex query expressions 1`] = `
Array [
  Array [
    Symbol(query),
    "
      SELECT substr(date,0,7), sum(amount) FROM transactions
      LEFT JOIN category_mapping __cm ON __cm.id = transactions.category
      
      WHERE transactions.isParent = 0 AND transactions.tombstone = 0
      GROUP BY substr(date,0,7)",
    false,
  ],
  Array [
    Symbol(mov),
    Object {
      "index": 1,
      "type": "__reg",
    },
    Object {
      "name": "generated!result",
      "type": "__var",
    },
  ],
]
`;

exports[`Compiler field dependencies 1`] = `
Array [
  "acct",
  "category",
  "description",
  "isParent",
  "tombstone",
  "date",
]
`;

exports[`Compiler parens 1`] = `
Array [
  Array [
    Symbol(mov),
    1,
    Object {
      "index": 1,
      "type": "__reg",
    },
  ],
  Array [
    Symbol(mov),
    Object {
      "index": 1,
      "type": "__reg",
    },
    Object {
      "index": 0,
      "type": "__stack",
    },
  ],
  Array [
    Symbol(mov),
    2,
    Object {
      "index": 1,
      "type": "__reg",
    },
  ],
  Array [
    Symbol(bop),
    "+",
    Object {
      "index": 0,
      "type": "__stack",
    },
    Object {
      "index": 1,
      "type": "__reg",
    },
  ],
  Array [
    Symbol(mov),
    Object {
      "index": 1,
      "type": "__reg",
    },
    Object {
      "name": "generated!result",
      "type": "__var",
    },
  ],
]
`;

exports[`Compiler parens 2`] = `
Array [
  Array [
    Symbol(mov),
    1232,
    Object {
      "index": 1,
      "type": "__reg",
    },
  ],
  Array [
    Symbol(mov),
    Object {
      "index": 1,
      "type": "__reg",
    },
    Object {
      "index": 0,
      "type": "__stack",
    },
  ],
  Array [
    Symbol(mov),
    2,
    Object {
      "index": 1,
      "type": "__reg",
    },
  ],
  Array [
    Symbol(bop),
    "+",
    Object {
      "index": 0,
      "type": "__stack",
    },
    Object {
      "index": 1,
      "type": "__reg",
    },
  ],
  Array [
    Symbol(mov),
    Object {
      "index": 1,
      "type": "__reg",
    },
    Object {
      "index": 0,
      "type": "__stack",
    },
  ],
  Array [
    Symbol(mov),
    3,
    Object {
      "index": 1,
      "type": "__reg",
    },
  ],
  Array [
    Symbol(mov),
    Object {
      "index": 1,
      "type": "__reg",
    },
    Object {
      "index": 2,
      "type": "__stack",
    },
  ],
  Array [
    Symbol(mov),
    4,
    Object {
      "index": 1,
      "type": "__reg",
    },
  ],
  Array [
    Symbol(bop),
    "+",
    Object {
      "index": 2,
      "type": "__stack",
    },
    Object {
      "index": 1,
      "type": "__reg",
    },
  ],
  Array [
    Symbol(bop),
    "-",
    Object {
      "index": 0,
      "type": "__stack",
    },
    Object {
      "index": 1,
      "type": "__reg",
    },
  ],
  Array [
    Symbol(mov),
    Object {
      "index": 1,
      "type": "__reg",
    },
    Object {
      "name": "generated!result",
      "type": "__var",
    },
  ],
]
`;

exports[`Compiler query expressions 1`] = `
Array [
  Array [
    Symbol(query),
    "
      SELECT sum(amount) as a FROM transactions
      LEFT JOIN category_mapping __cm ON __cm.id = transactions.category
      
       WHERE ((amount > 0)) AND transactions.isParent = 0 AND transactions.tombstone = 0
     ",
    false,
  ],
  Array [
    Symbol(mov),
    Object {
      "index": 1,
      "type": "__reg",
    },
    Object {
      "name": "generated!result",
      "type": "__var",
    },
  ],
]
`;

exports[`Compiler query expressions with field remapping 1`] = `
Array [
  Array [
    Symbol(query),
    "
      SELECT id FROM transactions
      LEFT JOIN category_mapping __cm ON __cm.id = transactions.category
      
       WHERE ((__cm.transferId = \\"50\\")) AND transactions.isParent = 0 AND transactions.tombstone = 0
     ",
    false,
  ],
  Array [
    Symbol(mov),
    Object {
      "index": 1,
      "type": "__reg",
    },
    Object {
      "name": "generated!result",
      "type": "__var",
    },
  ],
]
`;

exports[`Compiler query expressions with field remapping 2`] = `
Array [
  Array [
    Symbol(query),
    "
      SELECT id FROM transactions
      LEFT JOIN category_mapping __cm ON __cm.id = transactions.category
      LEFT JOIN categories t1 ON __cm.transferId = t1.id
       WHERE ((t1.name = \\"foo\\")) AND transactions.isParent = 0 AND transactions.tombstone = 0
     ",
    false,
  ],
  Array [
    Symbol(mov),
    Object {
      "index": 1,
      "type": "__reg",
    },
    Object {
      "name": "generated!result",
      "type": "__var",
    },
  ],
]
`;

exports[`Compiler query expressions with field remapping 3`] = `
Array [
  Array [
    Symbol(query),
    "
      SELECT id, t1.name FROM transactions
      LEFT JOIN category_mapping __cm ON __cm.id = transactions.category
      LEFT JOIN categories t1 ON __cm.transferId = t1.id
       WHERE ((__cm.transferId = \\"50\\")) AND transactions.isParent = 0 AND transactions.tombstone = 0
     ",
    false,
  ],
  Array [
    Symbol(mov),
    Object {
      "index": 1,
      "type": "__reg",
    },
    Object {
      "name": "generated!result",
      "type": "__var",
    },
  ],
]
`;

exports[`Compiler query expressions with null 1`] = `
Array [
  Array [
    Symbol(query),
    "
      SELECT count(amount) FROM transactions
      LEFT JOIN category_mapping __cm ON __cm.id = transactions.category
      LEFT JOIN accounts t1 ON t1.id = transactions.acct
       WHERE (((t1.offbudget = 0) and (__cm.transferId IS NULL))) AND transactions.isParent = 0 AND transactions.tombstone = 0
     ",
    true,
  ],
  Array [
    Symbol(mov),
    Object {
      "index": 1,
      "type": "__reg",
    },
    Object {
      "name": "generated!result",
      "type": "__var",
    },
  ],
]
`;
